@charset "UTF-8";
:root {
  --container-width: 119rem;
  --gutter: 2rem;
  --color-black: #000;
  --color-white: #fff;
  --color-blue: #2374e1;
  --color-light-blue: #1d9bf0;
  --color-dark-blue: #0a66c2;
  --color-darker-blue: #143ce8;
  --color-red: #ff0000;
  --color-green: #03a696;
  --color-grey: #f6f6f6;
  --color-dark-green: #42959b;
  --color-background: var(--color-white);
  --color-text: var(--color-black);
  --color-box-img: var(--color-black);
  --color-link-bg: var(--color-black);
  --color-input-border: var(--color-black);
  --font-family-raleway: "Raleway", sans-serif;
  --font-family-poppins: "Poppins", sans-serif;
  --font-weight-regular: 400;
  --font-weight-medium: 500;
  --font-weight-semi-bold: 600;
  --font-weight-bold: 700;
  --font-size-70: 7rem;
  --font-size-65: 6.5rem;
  --font-size-40: 4rem;
  --font-size-38: 3.8rem;
  --font-size-24: 2.4rem;
  --font-size-22: 2.2rem;
  --font-size-20: 2rem;
  --font-size-18: 1.8rem;
  --font-size-15: 1.5rem;
  --transition-timing: 0.3s;
}

* {
  /* 
  margin: 0; padding: 0; → removes browser default spacing.
  font: inherit;→ forces every element (headings, inputs, buttons, etc.)
    to inherit their font properties from their immediate parent.
  */
  margin: 0;
  padding: 0;
  font: inherit;
}

*,
*::before,
*::after {
  /* Total element width = the declared width (it includes padding + border */
  box-sizing: border-box;
}

a {
  /*
  color: inherit; → makes the link text color match its parent’s text color
    (instead of the default blue/purple).

  display: inline-block; →Keeps the element inline (flows with text,
    doesn’t break to a new line).
  But unlike plain inline, it lets you set width, height, margin, and padding.
  */
  color: inherit;
  display: inline-block;
}

button {
  background-color: transparent;
  border: none;
  cursor: pointer;
  border: 0;
}

ul,
ol {
  list-style: none; /* removes the default bullets (•) */
}

html {
  font-size: 62.5%;
  scroll-behavior: smooth;
  scroll-padding-top: 11rem;
}

body,
[type=submit] {
  font-size: 1.6rem;
  font-family: var(--font-family-raleway);
  background-color: var(--color-background);
  color: var(--color-text);
  border: 0;
}

.container {
  display: grid;
  row-gap: 11rem;
  margin: 0 auto;
  max-width: calc(var(--container-width) + var(--gutter) * 2);
  padding-inline: var(--gutter);
}

.video-loop {
  position: fixed;
  top: 0;
  left: 0;
  min-width: 100%;
  min-height: 100%;
  opacity: 0.08;
  z-index: -1;
}

.section {
  position: relative;
  display: grid;
  grid-template-columns: repeat(2, auto);
  align-items: start;
}

.section--with-bg {
  padding: 11rem 0;
}

.section--with-bg::before {
  content: "";
  position: absolute;
  height: 100%;
  width: 100vw;
  background-color: var(--color-grey);
  justify-self: center;
  z-index: -1;
}

.h2-heading {
  font-size: var(--font-size-65);
  font-weight: var(--font-weight-bold);
  grid-column: 1/-1;
  margin-bottom: 8.7rem;
  text-transform: uppercase;
}

.h3-heading {
  font-size: var(--font-size-38);
  font-weight: var(--font-weight-bold);
  margin-bottom: 2.5rem;
}

.header {
  padding: 3rem 0;
  display: flex; /* Makes the header a flex container (easy to align items in row). */
  justify-content: center; /* Centers child elements horizontally inside the header. */
  position: sticky; /* Makes the header “stick” to the top when scrolling. */
  top: 0; /* Sticks to the very top of the viewport. */
  background-color: var(--color-background);
  z-index: 1; /* Ensures the header stays above other content (like images/text). */
}

.header::before {
  content: ""; /* creates an empty pseudo-element */
  position: absolute; /* positions it relative to the nearest positioned ancestor */
  z-index: -1; /* places it behind the .header content */
  height: 100%; /* makes it as tall as the .header */
  width: 100vw; /* spans full viewport width */
  border-bottom: 0.1rem solid var(--color-input-border);
  background-color: var(--color-background);
  /* top: 0rem;  exact alignment with top */
  top: 0.1rem; /* slight offset from the top */
}

/* Navigation */
.navigation {
  transition: var(--transition-timing); /* for responsive screens */
  background-color: var(--color-background); /* for responsive screens */
}

.navigation__list {
  display: flex; /* makes children line up in a row by default */
  gap: 2rem; /* adds 2rem spacing between flex items */
}

.navigation__link:link,
.navigation__link:visited {
  text-decoration: none; /* removes underline from both unvisited and visited links */
  font-weight: var(--font-weight-medium);
}

.navigation__link:hover,
.navigation__link:active {
  text-decoration: underline;
  color: var(--color-text);
}

.burger-menu__checkbox {
  display: none;
}

/* Toggle Component */
.toggle {
  display: flex; /* /* makes children line up in a row by default */
  gap: 1rem;
  margin-left: auto;
}

.toggle__title {
  font-weight: var(--font-weight-medium);
  font-size: var(--font-size-18);
}

.toggle__label {
  /* Checkbox is unchecked */
  display: block; /* Makes the label behave like a block element (fills available width, can have height/width). */
  position: relative; /* Sets a positioning context — often used because inside this label, you'll place the "knob" or circle with absolute positioning. */
  background-color: var(--color-black);
  padding: 0.3rem 0.4rem; /* Adds inner spacing inside the toggle (top/bottom: 0.3rem, left/right: 0.4rem). */
  border-radius: 1.5rem; /* Rounds corners heavily → gives the switch a pill/oval shape. */
  width: 4.5rem; /* Fixed width of the toggle switch. */
  height: 2.2rem; /* Fixed height of the toggle switch. */
  cursor: pointer; /* Changes cursor to hand (pointer) when hovering → indicates it's clickable. */
  transition: background-color 0.3s; /* Smoothly animates background color changes (e.g., when toggled). */
}

.toggle__label::after {
  /* Knob creation */
  content: ""; /* Creates an empty pseudo-element that can be styled like a real element. */
  width: 1.6rem; /* The knob’s width. */
  height: 1.6rem; /* The knob’s height (same as width → perfect circle). */
  border-radius: 50%; /* Rounds it into a circle. */
  display: block; /* Makes it render as a block (so width/height apply). */
  background-color: var(--color-white);
  transition: 0.3s; /* Smooth animation when it moves/changes. */
}

.toggle__checkbox {
  display: none; /* Hides the actual checkbox (we’ll style the label instead). */
}

.toggle__checkbox:checked + .toggle__label {
  /* When checked, change the pill background color of the toggle label. */
  background: var(--color-white);
}

.toggle__checkbox:checked + .toggle__label::after {
  transform: translateX(2.1rem); /* Slides the knob to the right side. */
  background: var(--color-green);
}

.bio {
  column-gap: 7.4rem;
  row-gap: 0;
  grid-template-columns: repeat(2, 1fr);
}
.bio__heading {
  font-size: var(--font-size-70);
  font-weight: var(--font-weight-bold);
}
.bio__objective {
  font-family: var(--font-family-poppins);
  font-weight: var(--font-weight-regular);
  font-size: var(--font-size-20);
  margin: 3rem 0 8rem;
}
.bio__name {
  font-weight: var(--font-weight-semi-bold);
}
.bio__facebook {
  color: var(--color-blue);
}
.bio__gmail {
  color: var(--color-light-blue);
}
.bio__linkedin {
  color: var(--color-dark-blue);
}
.bio__github {
  color: var(--color-red);
}
.bio__links {
  font-size: 2.4rem;
  font-weight: var(--font-weight-semi-bold);
  text-decoration: none;
}
.bio .say-hi-link {
  background-color: var(--color-link-bg);
  color: var(--color-white);
  padding: 0.7rem 4.7rem;
}
.bio .find-out-link {
  padding: 0.7rem 0;
  margin-inline-start: 1.4rem;
}
@keyframes jump {
  0% {
    transform: translateY(0.5rem);
  }
  35% {
    transform: translateY(-0.5rem);
  }
  70% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(0);
  }
}
.bio__arrow {
  display: inline-block;
  animation: jump 1s infinite ease-in-out alternate;
}
.bio__pic-content {
  display: flex;
  position: relative;
  align-items: flex-end;
  justify-self: end;
}
.bio__pic-content::before {
  content: "";
  position: absolute;
  background-color: var(--color-box-img);
  width: 100%;
  height: 46rem;
  z-index: -1;
  border-radius: 1.8rem;
  box-shadow: 2.17543px 8.7017px 38.0699px rgba(0, 0, 0, 0.15);
}
.bio__pic {
  width: 42.7rem;
}

/* ========== SKILLS LIST ========== */
.skills__list {
  display: grid; /* Use CSS Grid to arrange skills in rows/columns */
  grid-template-columns: repeat(3, 1fr); /* Create 3 equal-width columns (1fr = 1 fraction of free space) */
  row-gap: 5rem; /* Vertical space (gap) between rows = 5rem */
}

/* Each skill item */
.skills__item {
  transition: var(--transition-timing); /* Apply smooth animation timing from a CSS variable */
  user-select: none; /* Prevent text from being highlighted when clicked/dragged */
}

/* The skill title (HTML, CSS, React, etc.) */
.skills__title {
  font-size: var(--font-size-38);
  font-weight: var(--font-weight-semi-bold);
}

/* The "years of experience" under each title */
.skills__years {
  display: inline-block; /* Makes the span behave like a small block (respects margin/padding) */
  font-size: var(--font-size-20); /* Slightly smaller text than title */
  margin-top: 1rem; /* Push down from the title for spacing */
}

/* Hover effect for each skill item */
.skills__item:hover {
  text-shadow: 0 0 2px var(--color-green);
}

.media {
  align-items: center;
  justify-content: center;
}

.media__video {
  max-width: 100%;
}

.projects__main {
  column-gap: 7.4rem;
  row-gap: 7.5rem;
  grid-template-columns: repeat(2, 1fr);
  display: grid;
}
.projects__img {
  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.2);
  max-width: 100%;
}
.projects__data {
  align-self: center;
}
.projects__description {
  line-height: 1.5;
}
.projects__link {
  color: var(--color-darker-blue);
  font-family: var(--font-family-poppins);
  font-weight: var(--font-weight-medium);
  margin-top: 2.3rem;
}
.projects__link::after {
  content: "";
  display: inline-block;
  width: 1.4rem;
  height: 1.4rem;
  background-image: url("./images/external-icon.png");
  background-size: contain;
  margin-left: 0.6rem;
}

.clients__opinions {
  grid-column: 1/-1; /* Makes this div span across the full width of the parent grid */
  font-size: var(--font-size-40); /* Large font for opinions */
  line-height: 1.7; /* Spacing between lines for readability */
}

.clients__wrapper {
  display: flex; /* Place all opinions in a horizontal row */
  overflow-x: auto; /* Allow horizontal scrolling if content overflows */
  -ms-scroll-snap-type: x mandatory; /* Old IE/Edge syntax: force snapping horizontally */
  scroll-snap-type: x mandatory; /* Modern syntax: enable horizontal snap points */
}

.clients__opinion {
  flex-basis: 100%; /* Each opinion takes 100% of the wrapper width */
  flex-shrink: 0; /* Prevent shrinking — each opinion stays full width */
  scroll-snap-align: start; /* Each opinion will snap neatly into view when scrolling */
}

.contact {
  column-gap: 20rem;
  row-gap: 0;
  grid-template-columns: repeat(2, 1fr);
  align-items: center;
}
.contact__description {
  font-size: var(--font-size-20);
  line-height: 1.9;
}
.contact__email {
  font-weight: var(--font-weight-bold);
  margin: 2.5rem 0;
}
.contact__social {
  transition: var(--transition-timing);
}
.contact__social:hover {
  transform: scale(1.2);
}
.contact__inputs {
  display: flex;
  gap: 3rem;
}
.contact__input {
  border: 0;
  outline: 0;
  background: transparent;
  border-bottom: 0.1rem solid var(--color-input-border);
  flex: 1;
}
.contact__textarea {
  width: 100%;
  margin-top: 4rem;
}
.contact__button {
  background-color: var(--color-link-bg);
  color: var(--color-white);
  padding: 1.7rem 1.8rem;
  font-weight: var(--font-weight-medium);
  font-size: var(--font-size-24);
  margin-top: 3.4rem;
}
.contact form:invalid::after {
  content: "*";
  font-size: var(--font-size-38);
  color: var(--color-red);
}

.footer {
  padding: 1rem 0;
  font-size: var(--font-size-15);
  border-top: 0.1rem solid var(--color-black);
}

html:has(.toggle__checkbox:checked) {
  --color-background: var(--color-black);
  --color-text: var(--color-white);
  --color-box-img: var(--color-green);
  --color-link-bg: var(--color-green);
  --color-grey: #080808;
  --color-input-border: var(--color-white);
}

@media (max-width: 1000px) {
  html {
    font-size: 8px;
  }
}
@media (max-width: 800px) {
  .container {
    row-gap: 8rem;
  }
  .section {
    grid-template-columns: 1fr;
  }
  .bio__pic-content {
    grid-row: 1;
    justify-self: center;
    margin-bottom: 4rem;
  }
  .skills__list {
    grid-template-columns: repeat(2, 1fr);
  }
  .projects__main {
    grid-template-columns: 1fr;
    row-gap: 6rem;
    justify-items: center;
  }
  .projects__data:nth-of-type(2) {
    order: 1;
  }
  .clients__opinions {
    font-size: var(--font-size-24);
  }
  .contact {
    row-gap: 6rem;
  }
  .contact__formContent {
    order: -1;
  }
}
@media (max-width: 500px) {
  .bio__pic {
    width: 100%;
  }
  .header {
    padding: 0;
  }
  .header::before {
    z-index: 0;
  }
  .burger-menu {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    z-index: 0;
    align-self: center;
    cursor: pointer;
  }
  .burger-menu__bar {
    height: 0.3rem;
    width: 4.375rem;
    background-color: var(--color-text);
    transition: var(--transition-timing);
  }
  .burger-menu__checkbox:checked + .navigation {
    top: 100%;
  }
  .header:has(.burger-menu__checkbox:checked) .burger-menu__bar:nth-child(1) {
    transform: translateY(10px) rotate(40deg);
  }
  .header:has(.burger-menu__checkbox:checked) .burger-menu__bar:nth-child(2) {
    opacity: 0;
    visibility: hidden;
  }
  .header:has(.burger-menu__checkbox:checked) .burger-menu__bar:nth-child(3) {
    transform: translateY(-7px) rotate(-40deg);
  }
  .navigation {
    position: absolute;
    padding: 3rem 0;
    width: 100%;
    top: 0;
    border-bottom: 0.1rem solid var(--color-text);
    z-index: -1;
    width: 100vw;
  }
  .navigation__list {
    justify-content: center;
  }
  .toggle {
    padding: 3rem 0;
    z-index: 1;
  }
}